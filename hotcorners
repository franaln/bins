#!/usr/bin/env python2
# -*- python -*-
# adapted from cb-hotcorners by corenominal

from Xlib import display
from Xlib.ext.xtest import fake_input
from Xlib import X
from subprocess import check_output
import sys, time, os

check_intervall = 0.2

cmd_top_left_corner     = 'sherlock apps'
cmd_top_right_corner    = ''
cmd_bottom_left_corner  = ''
cmd_bottom_right_corner = 'showtime'


def main():
    disp = display.Display()
    root = display.Display().screen().root

    # get display values
    p = check_output(['xdotool','getdisplaygeometry'])
    width, height = (int(i) for i in p.split())

    hw = width / 2
    rt = width - 1
    bt = height - 1

    bounce = 40

    def mousepos():
        data = root.query_pointer()._data
        return data["root_x"], data["root_y"], data["mask"]

    def mousemove(x, y):
        fake_input(disp, X.MotionNotify, x=x, y=y)
        disp.sync()

    while True:

        time.sleep(check_intervall)

        pos = mousepos()

        if pos[0] == 0 and pos[1] == 0 and cmd_top_left_corner:
            time.sleep(0.2)
            pos = mousepos()
            if pos[0] == 0 and pos[1] == 0:
                mousemove(pos[0] + bounce, pos[1] + bounce)
                os.system('(' + cmd_top_left_corner + ') &')
                mousemove(pos[0] + bounce, pos[1] + bounce)
                time.sleep(2)

        elif pos[0] == rt and pos[1] == 0 and cmd_top_right_corner:
            time.sleep(0.2)
            pos = mousepos()
            if pos[0] == rt and pos[1] == 0 :
                mousemove(pos[0] - bounce, pos[1] + bounce)
                os.system('(' + cmd_top_right_corner + ') &')
                mousemove(pos[0] - bounce, pos[1] + bounce)
                time.sleep(2)

        elif pos[0] == 0 and pos[1] == bt and cmd_bottom_left_corner:
            time.sleep(0.2)
            pos = mousepos()
            if pos[0] == 0 and pos[1] == bt:
                mousemove(pos[0] + bounce, pos[1] - bounce)
                os.system('(' + cmd_bottom_left_corner + ') &')
                mousemove(pos[0] + bounce, pos[1] - bounce)
                time.sleep(2)

        elif pos[0] == rt and pos[1] == bt and cmd_bottom_right_corner:
            time.sleep(0.2)
            pos = mousepos()
            if pos[0] == rt and pos[1] == bt:
                mousemove(pos[0] - bounce, pos[1] - bounce)
                os.system('(' + cmd_bottom_right_corner + ') &')
                mousemove(pos[0] - bounce, pos[1] - bounce)
                time.sleep(2)


if __name__ == '__main__':
    main()
