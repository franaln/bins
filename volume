#!/bin/bash
#
# Usage: volume [increase/decrease/toggle]
# (Needs dzen2 and gdbar)
#

# Config
secs="1"              # sleep
bg="#101010"          # background colour of window
fg="#dedede"          # foreground colour of text
bar_fg="#606060"      # foreground colour of volume bar
bar_bg="#404040"      # background colour of volume bar
height="40"           # window height
width="300"           # window width
bar_width="250"       # width of volume bar
bar_height="10"       # width of volume bar

device="Master"

to_grep="Mono: P"
try=$(amixer get $device | grep $to_grep)
if [ ! $try ] ; then
    to_grep="Front Left: P"
fi

pipe="/tmp/volumepipe"

# Lets find the appropriate positioning for the volume bar
dimensions=`xdpyinfo | grep 'dimensions:' | awk '{print $2}'`
xres=`echo $dimensions | cut -dx -f1`
yres=`echo $dimensions | cut -dx -f2`
xpos=$[$xres / 2 - $width / 2]       
ypos=$[$yres * 2 / 3 - $height / 2] 
# xpos=$[$xres - $width - 10]       
# ypos=$[$height + 20] 

# Increase/drecrease volume
function increase_volume()
{
    amixer -q set $device $1%+
}

function decrease_volume()
{
    amixer -q set $device $1%-
}

# Gets the current volume
function get_volume()
{
    curvol=$(amixer get $device | grep "$to_grep" | cut -d '[' -f 2 | cut -d '%' -f 1)
    echo $curvol
}

# Get mute state
function get_muted()
{
    ismuted=$(amixer get $device | grep "$to_grep" | awk '{print $6}' | sed -e 's:\[::' | sed -e 's:\]::')
    echo $ismuted
}

vol=$(get_volume)    # Reads volume
muted=$(get_muted)   # Reads mute

if [[ $1 == "increase" ]] ; then

    if [[ $muted == "off" ]] ; then
	    amixer -q set $device toggle
    fi
    
    vol=$(($vol + 5))   
    if [[ $vol -gt 100 ]] ; then
        increase_volume $((100 - $vol + 5))
        vol=100
    else 
	    increase_volume 5
    fi

elif [[ $1 == "decrease" ]] ; then
    if [[ $muted == "off" ]] ; then
	    amixer -q set $device toggle
    fi

    vol=$(($vol - 5))
    if [[ $vol -le 0 ]]
    then
        decrease_volume $(($vol + 5))
        vol=0        
    else
	    decrease_volume 5
    fi
elif [[ $1 == "toggle" ]] ; then
    amixer -q set $device toggle
fi

muted=$(get_muted)
if [[ $muted == "off" ]] ; then
    bar_fg="#f2777a"
    bar_bg="#f2777a"
fi

# showing in dzen2
if [ ! -e "$pipe" ] ; then
    mkfifo "$pipe"
    (dzen2 -tw "$width" -h "$height" -x "$xpos" -y "$ypos" -bg "$bg" -fg "$fg" < "$pipe" ; rm  -f "$pipe") &
fi

# feed the pipe
(echo $vol | gdbar -fg "$bar_fg" -bg "$bar_bg" -w "$bar_width" -h "$bar_height" ; sleep "$secs" ) > "$pipe"
