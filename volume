#! /bin/bash
#
# Control pulseaudio volume (based on pulseaudio-ctl)
#

setup() {
  sink=$(pacmd list-sinks | awk '/* index:/{ print $3 }')
  muted=$(pacmd list-sinks | grep -A 15 '* index' | awk '/muted:/{ print $2 }')
  vol=$(pacmd list-sinks | grep -A 15 '* index' | awk '/volume: 0:/{ print $3 }' | sed 's/%//')

  if [ "$vol" -ge 0 -o "$vol" -lt 0 2>/dev/null ]; then
      return 0
  else
      # the git snapshot at the time of writing this script changes the
      # expected output of this cmd
      vol=$(pacmd list-sinks | grep -A 15 '* index' | awk '/volume: front/{ print $5 }' | sed 's/%//g')
      if [ "$vol" -ge 0 -o "$vol" -lt 0 2>/dev/null ]; then
          return 0
      else
          echo -e "Cannot find current volume."
          exit 1
      fi
  fi
}

osd() {
    setup
    if [[ $muted == "yes" ]] ; then
        osdify -p $vol -a
    else
        [[ $vol  -ge 100 ]] && vol=100
        [[ $vol  -le 0 ]] && vol=0
        osdify -p $vol
    fi
}

vol_up() {
    [[ "$vol" -ge 100 ]] && return 0 || pactl set-sink-volume "$sink" -- +5%
}

vol_down() {
    [[ "$vol" -le 0 ]] && return 0 || pactl set-sink-volume "$sink" -- -5%
}

toggle() {
    pactl set-sink-mute "$sink" toggle
}

case "$1" in
    up)
        # raise volume by 5%
        setup
        [[ "$muted" == "yes" ]] && toggle
        vol_up
        osd
        ;;
    down)
        # lowers volume by 5%
        setup
        [[ "$muted" == "yes" ]] && toggle
        vol_down
        osd
        ;;
    toggle)
        # mutes the volume entirely
        setup
        toggle
        osd
        ;;
    *)
        # show usage
        echo "volume [up|down|toggle]"
        exit 1
        ;;
esac
