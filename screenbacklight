#! /usr/bin/env python

import os
import sys
import subprocess as sp

backlight_path = '/sys/class/backlight/intel_backlight'

def get_current_brightness():
    with open(os.path.join(backlight_path,'brightness')) as curr_file:
        return int(curr_file.read().split('\n')[0])

def get_max_brightness():
    with open(os.path.join(backlight_path,'max_brightness')) as max_file:
        return int(max_file.read().split('\n')[0])

def main():

    if len(sys.argv) < 2:
        print("usage: %s [up|down|min|max]" % sys.argv[0])
        sys.exit(1)

    current_value = get_current_brightness()
    max_value = get_max_brightness()

    step = max_value / 10
    threshold = 2 * step

    if current_value < threshold:
        step /= 4

    if sys.argv[1] == "up" or sys.argv[1] == "+":
        new_value = current_value + step
    elif sys.argv[1] == "+2":
        new_value = current_value + 2 *step
    elif sys.argv[1] == "+3":
        new_value = current_value + 3 *step
    elif sys.argv[1] == "down" or sys.argv[1] == "-":
        new_value = current_value - step
    elif sys.argv[1] == 'min':
        new_value = 0
    elif sys.argv[1] == 'max':
        new_value = max_value
    else:
        print("usage: %s [up|down]" % sys.argv[0])
        sys.exit(1)

    if new_value > max_value:
        new_value = max_value
    elif new_value < 0:
        new_value = 0

    new_value = int(new_value)
    with open(os.path.join(backlight_path, 'brightness'), 'w') as f:
        f.write(str(new_value))

    percentage = int(new_value * 100 / max_value)

    devnull = open(os.devnull, 'w')

    sp.call(['killall', 'osdify'], stdout=devnull, stderr=sp.STDOUT)
    sp.call(['osdify', '-p', str(percentage)])


if __name__ == '__main__':
    main()
